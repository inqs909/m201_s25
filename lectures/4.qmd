---
title: "Numerical Data"
format:
  revealjs:
    scrollable: true
    theme: [default, styles.scss]
    navigation-mode: vertical
    controls-layout: bottom-right
    controls-tutorial: true
    incremental: false 
    chalkboard:
      src: notes/chalkboard_1a.json
      storage: chalkboard_pres
      theme: whiteboard
      chalk-width: 4
knitr:
  opts_chunk: 
    echo: true
    eval: true
    message: false
    warnings: false
    comment: "#>" 
    
revealjs-plugins:
  - pointer
  - verticator
  
filters: 
  - reveal-header
  - code-fullscreen
  - reveal-auto-agenda

editor: source
---

## R Packages

```{r}
#| echo: false
#| eval: true

library(csucistats)
library(tidyverse)
trashwheel <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-03-05/trashwheel.csv')

theme_set(theme_bw())

```

-   csucistats
-   tidyverse

## Motivating Example

```{=html}
<iframe width="560" height="315" src="https://www.youtube.com/embed/Zzjw-Pw5jwQ?si=WUBQTifP1TNSxDoJ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
```

# Summary Statistics

## What is numerical data?

```{r}
#| echo: true
#| eval: true

trashwheel$PlasticBottles
```


## Summary Statistics

Summary statistics are used to describe the distribution of data.

## Central Tendency

Central tendency is a statistical concept that refers to the central or typical value around which a set of data points tends to cluster. It is used to summarize and describe a data set by identifying a single representative value that provides insights into the data's overall characteristics.

## Variation

Variation in statistics refers to the extent to which data points in a dataset deviate or differ from a central tendency measure. Understanding variation is crucial for making informed decisions, drawing meaningful conclusions, and assessing the reliability of statistical analyses.

## Minimum

The minimum (min) is the smallest value in the data.

## Maximum

The maximum (max) is the largest value in the data.

## Quartiles

Quartiles are three values (Q1, Q2, Q3) that divides the data into four subsets.

::: fragment
![](https://i.postimg.cc/p2BbKK5t/image.png){fig-align="center"}
:::

## Q1

Q1 is the value signifying that a quarter of the data is lower than it.

## Q2 - Median

Q2 is the value signifying that half of the data is below it.

::: fragment
The median also represents the central tendency of the data.
:::

## Q3

Q3 is the value signifying that 3 quarters of the data is below it.

## Interquartile Range

::: fragment
$$
IQR = Q_3 - Q_1
$$
:::

## Range

::: fragment
$$
R = \mathrm{max} - \mathrm{min}
$$
:::

## How to identify the quartiles?

1.  Sort the data
2.  ID Max and Min
3.  Find the amount of data the makes a quarter:
    1.  $K=N/4$
4.  Create 4 groups using the sorted data
    1.  group by data size
    2.  If $K$ has a decimal, the $Kth$ value is quartile of each group.

## Mean

Describe how you will find the mean of these numbers:

```{r}
#| echo: false

rpois(5, 15)

```

## Mean

The mean is another measurement for central tendency.

$$
\bar X = \frac{1}{n}\sum^n_{i=1}X_i
$$

-   $n$: total data points

-   $X_i$: data points

-   $i$: indexing data

-   $\sum$: add all from first (bottom) to last (up)

## Variance

The variance is a measurement on the average squared distance the data points are from the central tendency.

$$
s^2 = \frac{1}{n-1}\sum^n_{i=1}(X_i-\bar X)^2
$$

## Standard Deviation

The standard deviation is a measurement on the average distance the data points are from the central tendency.

$$
s=\sqrt{s^2}
$$


## Outliers

These are data points that seem to be highly distant from all other variables.

::: fragment
![](https://miro.medium.com/v2/resize:fit:697/0*_k9tUMfs2P4CGUA3.png)
:::


# Numerical Statistics in R

## Numerical Statistics in R

## Mean

```{r}
#| echo: true
#| eval: false

mean(DATA$VAR)
```


## Median

```{r}
#| echo: true
#| eval: false

median(DATA$VAR)
```

## Standard Deviation

```{r}
#| echo: true
#| eval: false

sd(DATA$VAR)
```

## Variance

```{r}
#| echo: true
#| eval: false

var(DATA$VAR)
```

## Quartiles

```{r}
#| echo: true
#| eval: false

quantile(DATA$VAR, probs = c(0.25, 0.5, 0.75))

```


## Max and Min

```{r}
#| echo: true
#| eval: false

max(DATA$VAR)
min(DATA$VAR)

```

## Summary Statistics

```{r}
#| echo: true
#| eval: false
num_stats(DATA$VAR)
```

## Mr. Trash Wheel

```{r}
num_stats(trashwheel$PlasticBottles)
```

# Data Visualization

## Histogram

A histogram is a graphical representation of the distribution or frequency of data points in a dataset. It provides a visual way to understand the shape, central tendency, and spread of a dataset by dividing the data into intervals or bins and showing how many data points fall into each bin as a bar.

## Histogram R Code

```{r}
#| eval: false
#| echo: true

ggplot(DATA, aes(VARIABLE)) +
  geom_histogram(bins = X)
```


## Histogram

```{r}
#| code-fold: true
#| eval: true
y <- rnorm(1000)
ggplot(tibble(y), aes(y)) +
  geom_histogram(bins = 15)

```

## Histogram

```{r}
#| code-fold: true
#| eval: true

y <- rgamma(1000, 2)
ggplot(tibble(y), aes(y)) +
  geom_histogram(bins = 15)


```

## Histograms

```{r}
#| code-fold: true
#| eval: true

y <- rbeta(1000, 5, 1)
ggplot(tibble(y), aes(y)) +
  geom_histogram(bins = 15)
```

## Histograms

```{r}
#| code-fold: true
#| eval: true
y <- rbinom(1000, 1, 0.4)
z <- (y == 0) * rnorm(1000, 23) + (y == 1) * rnorm(1000, 27)
ggplot(tibble(z), aes(z)) +
  geom_histogram(bins = 15)
```

## Mr. Trash Wheel

```{r}
ggplot(trashwheel, aes(PlasticBottles)) +
  geom_histogram()
```



## Box Plot

A box plot, also known as a box-and-whisker plot, is a graphical representation of the distribution and key statistical characteristics of a dataset. It provides a visual summary of the data's central tendency, spread, and potential outliers.

## Box Plot

![](https://miro.medium.com/max/9000/1*2c21SkzJMf3frPXPAR_gZA.png){fig-align="center"}

## Box Plot R Code

```{r}
#| echo: true
#| eval: false

ggplot(DATA, aes(VARIABLE)) +
  geom_boxplot()

```

## Box Plot

```{r}
ggplot(trashwheel, aes(PlasticBottles)) +
  geom_boxplot() 

```

## Box Plot

```{r}
ggplot(trashwheel, aes(y = PlasticBottles)) +
  geom_boxplot() 
```

## Dot Plots

Dot Plots are similar to histograms, but they incorporate dots to count how many data points fall within bins.


## Dot Plots in R

```{r}
#| echo: true
#| eval: false

ggplot(DATA, aes(VARIABLE)) +
  geom_dotplot(binwidth = X)

```


## Dot Plots

```{r}
#| code-fold: true
#| eval: true

ggplot(trashwheel, aes(PlasticBottles)) +
  geom_dotplot(binwidth = 100)

```

# Transformed Data

## Transformed Data

When working with skewed data, it may be beneficial to transform the data to identify trends.

::: fragment
-   $Y = \ln(X)$
-   $Y = \frac{1}{X}$
-   $Y = \sqrt X$
:::

## Example

```{r}
#| code-fold: true
#| eval: true
library(patchwork)
y <- rlnorm(1000, mean = 0, sd = 2)
ly <- log(y)

p1 <- ggplot(tibble(y), aes(y)) +
  geom_histogram() +
  ggtitle("Skewed Data")
p2 <- ggplot(tibble(y = ly), aes(y)) +
  geom_histogram() +
  ggtitle("Log-Transformed Data")

p1 + p2
```



# Scatter Plots

## Scatter Plots

Scatter plots demonstrate how two variables behave with each other. They can tell you any postive or negative trends, if they exist, with the combination of the plots.

## Positive Relationship

```{r}
#| echo: false
#| eval: true

x <- rnorm(1000, mean = 3, sd = 1)
y <- 4 + 4 * x + rnorm(1000, sd = 2.5)

ggplot(tibble(x, y), aes(x, y)) +
  geom_point() + 
  theme_bw()

```

## Negative Relationship

```{r}
#| echo: false
#| eval: true

x <- rnorm(1000, mean = 3, sd = 1)
y <- 4 - 4 * x + rnorm(1000, sd = 2.5)

ggplot(tibble(x, y), aes(x, y)) +
  geom_point() + 
  theme_bw()

```

## No Relationship

```{r}
#| echo: false
#| eval: true

x <- rnorm(1000, mean = 3, sd = 1)
y <- 4 + rnorm(1000, sd = 2.5)

ggplot(tibble(x, y), aes(x, y)) +
  geom_point() + 
  theme_bw()

```
## Weak Positive or Negative Relationship

```{r}
#| echo: false
#| eval: true
library(patchwork)
x <- rnorm(1000, mean = 3, sd = 1)
y <- 4 + 2 * x + rnorm(1000, sd = 6)
yy <- 4 - 2 * x + rnorm(1000, sd = 6)

p1 <- ggplot(tibble(x, y = y), aes(x, y)) +
  geom_point() +
  ggtitle("Weak Positive") +
  theme_bw()

p2 <- ggplot(tibble(x, y = yy), aes(x, y)) +
  geom_point() + 
  ggtitle("Weak Negative") +
  theme_bw()

p1 + p2

```

## Scatter Plots in R

```{r}
#| echo: true
#| eval: false

ggplot(DATA, aes(x = VAR1, y = VAR2)) +
  geom_point()

```

## Mr. Trash Wheel

```{r}
ggplot(trashwheel, aes(PlasticBottles, PlasticBags)) +
  geom_point()
```

## Transformed Data

```{r}
ggplot(trashwheel, aes(log(PlasticBottles), log(PlasticBags))) +
  geom_point()
```

